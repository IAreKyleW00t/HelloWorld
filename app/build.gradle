plugins {
    // Automatically add license headers
    id 'com.github.hierynomus.license' version '0.13.1'
}
apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-crash'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "io.csuoh.hello"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.+', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.0'
    testCompile 'junit:junit:4.12'

    // ButterKnife
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    // Picasso
    compile 'com.squareup.picasso:picasso:2.5.2'

    // Parceler
    compile 'org.parceler:parceler-api:1.1.6'
    annotationProcessor 'org.parceler:parceler:1.1.6'
    
    // Material Dialogs
    compile 'com.afollestad.material-dialogs:core:0.9.4.2'

    // Circular ImageViews
    compile 'de.hdodenhof:circleimageview:2.1.0'
    
    // Firebase
    compile 'com.google.firebase:firebase-auth:10.2.1'
    compile 'com.google.firebase:firebase-storage:10.2.1'
    compile 'com.google.firebase:firebase-database:10.2.1'
    compile 'com.google.firebase:firebase-crash:10.2.1'

    // Google/Android
    compile 'com.google.android.gms:play-services-auth:10.2.1'
    compile 'com.android.support:design:25.3.0'

}

// Apply a license header to every source file automatically
license {
    header = file('HEADER.txt')
    strictCheck true
}

// Google Services
apply plugin: 'com.google.gms.google-services'